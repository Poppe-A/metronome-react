{"version":3,"sources":["hoc/Aux.js","Components/SongComponent.js","Components/SongListComponent.js","Components/Blinker.js","Components/Ui/Backdrop.js","Components/Ui/Modal.js","Components/AddSongForm.js","axios.js","Containers/Metronome.js","App.js","reportWebVitals.js","index.js"],"names":["aux","props","children","songComponent","selectedClass","isSelected","className","onClick","selectSong","id","name","tempo","e","editSong","timeSignature","songListComponent","songList","map","song","title","addSong","Blinker","clampTempo","t","clamp","getTempo","startSound","source","ac","createBufferSource","buffer","loop","connect","destination","start","startWorkerTempo","blinkTime","state","worker","postMessage","message","stopWorkerTempo","initBlinkerPart","blinkerParts","i","push","bipped","startTempo","a","document","getElementById","console","log","clearInterval","timer","setInterval","bipBlink","defaultTempo","count","tempBlinkerparts","tempCount","setState","playSound","AudioContext","buf","this","createBuffer","sampleRate","channel","getChannelData","phase","amp","duration_frames","Math","sin","PI","loopEnd","prevProps","prevState","tempoToPlay","tabTodisplay","el","index","bippedClass","Aux","Component","backdrop","show","clicked","modal","close","style","transform","opacity","addSongForm","handleText","event","songTitle","target","value","songEdition","deleteButton","deleteSong","type","onChange","changeEditionName","changeEditionTempo","changeEditionSignature","mainButtonFunction","mainButtonLabel","instance","axios","create","baseURL","defaults","headers","post","Metronome","selectedSongId","tempoPlaying","showModal","toggleTempoPlaying","tempSongList","find","newSeletedindex","findIndex","openModal","stopPropagation","closeModal","songEdit","createOrModifySong","path","Accept","then","res","data","alert","componentDidMount","get","imgClass","tempoOnOff","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6384988b.chunk.js","sourcesContent":["const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\n\nimport './SongComponent.css'\n\nconst songComponent = (props) => {\n    const selectedClass = props.isSelected ? \"selectedSong\" : \"\";\n\n    return (\n    <div className={\"Song \" + selectedClass} onClick={() => props.selectSong(props.id)}>\n        <div className=\"SongLabels\">\n            <p className=\"SongName\">{props.name}</p>\n            <p className=\"songTempo\">{props.tempo + \" BPM\"}</p>\n        </div>\n        <div className=\"SongOption\" onClick={(e) => props.editSong(e, props.name, props.tempo, props.timeSignature, props.id)}></div>\n    </div>\n    )\n};\n\nexport default songComponent;\n","import React from 'react';\nimport SongComponent from './SongComponent';\nimport './SongListComponent.css';\n\n\nconst songListComponent = (props) => (\n    <div className=\"SongListContainer\">\n        <div className=\"SongList\">\n            {/* <div className=\"ArrowContainer\">\n                <div className=\"TopArrow\"></div>\n                <div className=\"BottomArrow\"></div>\n            </div> */}\n            {props.songList.map(song => (\n                <SongComponent \n                    key={song.id} \n                    id={song.id}\n                    name={song.title} \n                    tempo={song.tempo}\n                    timeSignature={song.timeSignature}\n                    selectSong={props.selectSong}\n                    isSelected={song.isSelected}\n                    editSong={props.editSong}\n                />\n        ))}\n        </div>\n        <div className=\"AddSong\" onClick={props.addSong}>\n            Add a song\n        </div>\n    </div>\n    \n);\n\nexport default songListComponent;\n","import React, { Component } from 'react';\n\nimport './Blinker.css';\nimport Aux from '../hoc/Aux';\n\n\nclass Blinker extends Component {\n    constructor(props) {\n        super(props)\n        this.timer = null;\n        this.ac = new AudioContext();\n\n        // this.audio = new Uifx(click);\n\n        this.state = {\n            blinkerParts : this.initBlinkerPart(this.props.timeSignature || 4),\n            count: 0,\n            tempo: null,\n            timeSignature: this.props.timeSignature || 4\n        }\n\n    }\n\n\n    componentDidMount() {\n   \n        // this.worker.addEventListener('message', e => {\n\n\n        //     if(e.data === \"tick\") {\n        //         if(this.props.playSound) {\n        //             // this.startSound();\n        //         }\n        //         // this.updateBlinker();\n\n        //     } else if (e.data === \"firstTick\") {\n        //         this.configuredSound = this.configureSound();\n        //         this.startSound();\n        //     }\n        //   });\n    }\n\n     \n\n      \n      clampTempo = (t) => {\n        return this.clamp(t, 30, 300);\n      }\n      \n       getTempo = () => {\n        // return clampTempo(parseFloat($(\"input\").value));\n        return this.clampTempo(130);\n      }\n      \n     startSound = () => {\n        var source = this.ac.createBufferSource();\n        source.buffer = this.buffer;\n        \n        source.loop = true;\n        source.connect(this.ac.destination);\n        source.start();\n      }\n\n    //   stopSound = () => {\n    //       this.ac.\n    //   }\n    configureSound() {\n      \n    //    setupTempo = () => {\n        var buf = this.ac.createBuffer(1, this.ac.sampleRate * 2, this.ac.sampleRate);\n        var channel = buf.getChannelData(0);\n        var phase = 0;\n        var amp = 1;\n        var duration_frames = this.ac.sampleRate / 50;\n        const f = 330;\n      \n        for (var i = 0; i < duration_frames; i++) {\n            \n          channel[i] = Math.sin(phase) * amp;\n          phase += 2 * Math.PI * f / this.ac.sampleRate;\n          if (phase > 2 * Math.PI) {\n            phase -= 2 * Math.PI;\n          }\n          amp -= 1 / duration_frames;\n        }\n      \n        var source = this.ac.createBufferSource();\n        source.buffer = buf;\n        source.loop = true;\n        source.loopEnd = 1 / (this.getTempo() / 60);\n        source.connect(this.ac.destination);\n        source.start(0);\n    //   }\n\n        this.buffer = buf;\n    }\n\n\n    ////////// WORKER\n    startWorkerTempo = () => {\n        let blinkTime = (60000/this.state.tempo);\n        \n        this.worker.postMessage({message:'start', tempo: blinkTime});\n    }\n\n    stopWorkerTempo = () => {\n        let blinkTime = (60000/this.state.tempo);\n        \n        this.worker.postMessage({message:'stop', tempo: blinkTime});\n    }\n\n    ///////////////// BLINKER\n\n    initBlinkerPart = (timeSignature) => {\n        let blinkerParts = [];\n        \n        for(var i=0; i<timeSignature; i++) {\n            blinkerParts.push({bipped: false})\n        }\n        return blinkerParts;\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(this.props.timeSignature !== this.state.timeSignature) {\n            this.setState({\n                blinkerParts : this.initBlinkerPart(this.props.timeSignature),\n                timeSignature: this.props.timeSignature\n            });\n        }\n\n        if(this.props.tempoToPlay !== this.state.tempo) {\n            this.setState({\n                blinkerParts : this.initBlinkerPart(this.props.timeSignature),\n                tempo: this.props.tempoToPlay,\n                count: 0\n            });\n        }\n\n        if(prevState.tempo !== this.state.tempo) {\n            this.startTempo();\n        }\n    }\n\n    startTempo = () => {\n        var a = document.getElementById(\"Blinker\");\n        console.log(\"Blinker \", a)\n        let blinkTime = (60000/this.state.tempo);\n        clearInterval(this.timer);\n        \n        this.timer = setInterval(\n            this.bipBlink,\n            blinkTime\n        )\n        this.bipBlink(0);\n    }\n\n    bipBlink = (defaultTempo) => {\n        console.log(\" count \", this.state.count)\n        let tempBlinkerparts = [...this.state.blinkerParts];\n        let tempCount = this.state.count;\n        if(tempCount > 0) {\n            tempBlinkerparts[tempCount-1].bipped = false;\n        } else {\n            tempBlinkerparts[this.state.timeSignature -1].bipped = false;\n        }\n\n        tempBlinkerparts[tempCount].bipped = true;\n        tempCount = (tempCount === this.state.timeSignature -1) ? 0 : tempCount + 1;\n    \n        this.setState({\n            blinkerParts: tempBlinkerparts,\n            count: tempCount\n        })\n        \n        if(this.props.playSound) {\n            // this.audio.play();\n        }\n    }\n\n    render() { \n        const tabTodisplay = this.state.blinkerParts.map((el, index) => {\n        const bippedClass = el.bipped ? \"bipped\" : \"\";\n            return <div \n                className={\"blinkerPart \" + bippedClass} \n                id={\"blinkerPart\" + index} \n                key={index}>\n            </div>\n        });\n        \n        return (\n            <Aux>\n                <div id='Blinker'>\n                    {tabTodisplay}\n                </div>\n            </Aux>\n            \n        )\n    }\n}\n\nexport default Blinker;","import React from 'react';\nimport './Backdrop.css';\nconst backdrop = (props) => (\n    props.show ? <div className={\"Backdrop\"} onClick={props.clicked}></div> : null\n)\n\nexport default backdrop;","import React from 'react';\nimport './Modal.css';\nimport Backdrop from './Backdrop';\nimport Aux from '../../hoc/Aux'\n\nconst modal = props => {\n    return (\n    <Aux>\n        <Backdrop show={props.show} clicked={props.close}> </Backdrop>\n        <div className=\"Modal\"\n            style={{\n                transform: props.show ? 'translateY(0)' : 'translateY(-100vh',\n                opacity: props.show ? '1' : '0'\n            }}>\n            {props.children}\n        </div>\n    </Aux>\n)};\n\nexport default modal;","import React, { Component } from 'react';\nimport './AddSongForm.css';\n\nclass addSongForm extends Component {\n\n    handleText = (event) => {\n        this.setState({songTitle: event.target.value})\n    }\n\n    componentDidUpdate(prevProps) {\n        //Typical usage, don't forget to compare the props\n        if (this.props.songEdition.title !== prevProps.songEdition.title) {\n          this.setState({songTitle: this.props.songEdition.title})\n        }\n       }\n\n\n    render () {\n        let deleteButton = null;\n\n    if (this.props.songEdition.id) {\n        deleteButton = (\n            <button onClick={this.props.deleteSong}>Delete</button>\n        );\n    }\n        return (\n            <div className=\"AddSongMod\">\n                <p className={\"FormTitle\"}>{this.props.songEdition.id ? \"Edit Song\" : \"Add Song\"}</p>\n                {/* <form onSubmit={this.handleSubmit}> */}\n                <form className=\"AddSongForm\">\n                    <label className=\"AddSongLabel\">\n                        <p>Title :</p>\n                        <input type=\"text\" value={this.props.songEdition.title || \"\"} onChange={this.props.changeEditionName} />\n                    </label>\n                    <label className=\"AddSongLabel\">\n                        <p>Tempo :</p>\n                        <input type=\"text\" value={this.props.songEdition.tempo || \"\"} onChange={this.props.changeEditionTempo} />\n                    </label>\n                    <label className=\"AddSongLabel\">\n                        <p>Time signature :</p>\n                        <input type=\"text\" value={this.props.songEdition.timeSignature || \"\"} onChange={this.props.changeEditionSignature} />\n                    </label>\n                </form>\n                <button onClick={this.props.mainButtonFunction}>{this.props.mainButtonLabel}</button>\n                {deleteButton}\n            </div>\n        )\n    }\n    \n    \n};\n\nexport default addSongForm;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'http://127.0.0.1:9000'\n});\n\naxios.defaults.headers.post['Content-Type'] ='application/x-www-form-urlencoded';\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n\nexport default instance;","import React, { Component } from 'react';\n\nimport SongListComponent from '../Components/SongListComponent';\nimport Blinker from '../Components/Blinker';\nimport Modal from '../Components/Ui/Modal';\nimport './Metronome.css';\nimport AddSongForm from '../Components/AddSongForm';\nimport axios from '../axios';\n\nclass Metronome extends Component {\n  // constructor(props) {\n  //     super(props);\n  //     this.state = {ce que je veux}\n  // }\n\n  state = {\n    songList: [\n      {\n        title: 'INTRO',\n        tempo: 105,\n        timeSignature: 3,\n        id: 7557452,\n        isSelected: false,\n      },\n      {\n        title: 'MODERN TALES',\n        tempo: 160,\n        timeSignature: 4,\n        id: 89898989,\n        isSelected: false,\n      },\n      {\n        title: 'ERATO',\n        tempo: 187,\n        timeSignature: 3,\n        id: 8787878,\n        isSelected: false,\n      },\n      {\n        title: 'RAFTER',\n        tempo: 141,\n        timeSignature: 3,\n        id: 45464564,\n        isSelected: false,\n      },\n      {\n        title: 'BROOMS',\n        tempo: 120,\n        timeSignature: 4,\n        id: 1561561,\n        isSelected: false,\n      },\n      {\n        title: 'CHURCH',\n        tempo: 179,\n        timeSignature: 3,\n        id: 11111111,\n        isSelected: false,\n      },\n\n      {\n        title: 'COLD',\n        tempo: 140,\n        timeSignature: 3,\n        id: 2222222,\n        isSelected: false,\n      },\n      {\n        title: 'GORGO',\n        tempo: 138,\n        timeSignature: 4,\n        id: 3333333,\n        isSelected: false,\n      },\n\n      {\n        title: 'TWO STEPS',\n        tempo: 185,\n        timeSignature: 4,\n        id: 2592952,\n        isSelected: false,\n      },\n    ],\n    selectedSongId: null,\n    timeSignature: 4,\n    tempoToPlay: null,\n    tempoPlaying: false,\n    showModal: false,\n    songEdition: {\n      title: null,\n      tempo: null,\n      timeSignature: null,\n      id: null,\n    },\n  };\n\n  toggleTempoPlaying = () => {\n    this.setState({ tempoPlaying: !this.state.tempoPlaying });\n  };\n\n  selectSong = (id) => {\n    const tempSongList = [...this.state.songList];\n    if (this.state.selectedSongId) {\n      tempSongList.find(\n        (song) => song.id === this.state.selectedSongId\n      ).isSelected = false;\n    }\n    const newSeletedindex = tempSongList.findIndex((song) => song.id === id);\n    tempSongList[newSeletedindex].isSelected = true;\n\n    this.setState({\n      songList: tempSongList,\n      selectedSongId: tempSongList[newSeletedindex].id,\n      tempoToPlay: tempSongList[newSeletedindex].tempo,\n      timeSignature: tempSongList[newSeletedindex].timeSignature,\n    });\n  };\n\n  ///////////////////////////\n  /////// ADD OR EDIT SONG / MODAL\n  ///////////////////////\n\n  editSong = (event, title, tempo, timeSignature, id) => {\n    this.openModal(title, tempo, timeSignature, id);\n    event.stopPropagation();\n  };\n\n  addSong = () => {\n    this.openModal(null, null, null);\n  };\n\n  closeModal = () => {\n    this.setState({\n      songEdition: {\n        title: null,\n        tempo: null,\n        timeSignature: null,\n        id: null,\n      },\n      showModal: false,\n    });\n  };\n\n  openModal = (title, tempo, timeSignature, id) => {\n    this.setState({\n      showModal: true,\n      songEdition: {\n        title: title || null,\n        tempo: tempo || null,\n        timeSignature: timeSignature || null,\n        id: id || null,\n      },\n    });\n  };\n\n  changeEditionName = (event) => {\n    const songEdit = { ...this.state.songEdition };\n    songEdit.title = event.target.value;\n    this.setState({ songEdition: songEdit });\n  };\n\n  changeEditionTempo = (event) => {\n    const songEdit = { ...this.state.songEdition };\n    songEdit.tempo = event.target.value;\n    this.setState({ songEdition: songEdit });\n  };\n\n  changeEditionSignature = (event) => {\n    const songEdit = { ...this.state.songEdition };\n    songEdit.timeSignature = event.target.value;\n    this.setState({ songEdition: songEdit });\n  };\n\n  createOrModifySong = () => {\n    let path = this.state.songEdition.id ? '/updateSong' : '/newSong';\n    let config = {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    };\n\n    if (\n      !this.state.songEdition.title ||\n      !this.state.songEdition.tempo ||\n      !this.state.songEdition.timeSignature\n    ) {\n      alert('Please fill all the fields');\n    } else {\n      axios\n        .post(\n          path,\n          {\n            id: this.state.songEdition.id || null,\n            title: this.state.songEdition.title,\n            tempo: this.state.songEdition.tempo,\n            timeSignature: this.state.songEdition.timeSignature,\n          },\n          config\n        )\n        .then((res) => this.setState({ songList: res.data }))\n        .then(() => this.closeModal());\n    }\n  };\n\n  deleteSong = () => {\n    axios\n      .post('/deleteSong/' + this.state.songEdition.id)\n      .then((res) => this.setState({ songList: res.data }))\n      .then(() => this.closeModal());\n  };\n\n  ///////////////////////////\n  /////// LIFECYCLE\n  ///////////////////////\n\n  componentDidMount = () => {\n    axios.get('/getSongs').then((res) => {\n      //   this.setState({ songList: res.data });\n    });\n  };\n\n  render() {\n    const imgClass = this.state.tempoPlaying ? 'soundOn' : 'soundOff';\n\n    return (\n      <div className='MetronomeWindow'>\n        <h1>MY SETLIST METRONOME</h1>\n        <Modal show={this.state.showModal} close={this.closeModal}>\n          <AddSongForm\n            songEdition={this.state.songEdition}\n            changeEditionName={this.changeEditionName}\n            changeEditionTempo={this.changeEditionTempo}\n            changeEditionSignature={this.changeEditionSignature}\n            deleteSong={this.deleteSong}\n            mainButtonFunction={this.createOrModifySong}\n            mainButtonLabel={this.state.songEdition.id ? 'Update' : 'Create'}\n          ></AddSongForm>\n        </Modal>\n        <Blinker\n          timeSignature={this.state.timeSignature}\n          tempoToPlay={this.state.tempoToPlay}\n          playSound={this.state.tempoPlaying}\n          tempoOnOff={this.toggleTempoPlaying}\n        ></Blinker>\n        <SongListComponent\n          songList={this.state.songList}\n          selectSong={this.selectSong}\n          editSong={this.editSong}\n          addSong={this.addSong}\n        ></SongListComponent>\n        <div\n          id='toggleSound'\n          className={imgClass}\n          onClick={this.toggleTempoPlaying}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Metronome;\n","import React, { Component } from 'react';\nimport Layout from './Components/Layouts/Layout';\nimport Metronome from './Containers/Metronome';\nimport './App.css'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"MainApp\">\n          <Metronome></Metronome>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}